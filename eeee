[33mcommit 3e06c9ec2ad2eb64b99d60a3e48839afcd8dad27[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Oluwadamilare Okubanjo <damilarelamine@gmail.com>
Date:   Mon May 2 21:00:18 2022 +0100

    new commits

[1mdiff --git a/0x15-file_io/0-read_textfile.c b/0x15-file_io/0-read_textfile.c[m
[1mnew file mode 100644[m
[1mindex 0000000..520f2ba[m
[1m--- /dev/null[m
[1m+++ b/0x15-file_io/0-read_textfile.c[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m#include "main.h"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * read_textfile - reads a text file and prints the letters[m
[32m+[m[32m * @filename: filename.[m
[32m+[m[32m * @letters: numbers of letters printed.[m
[32m+[m[32m *[m
[32m+[m[32m * Return: numbers of letters printed. It fails, returns 0.[m
[32m+[m[32m */[m
[32m+[m[32mssize_t read_textfile(const char *filename, size_t letters)[m
[32m+[m[32m{[m
[32m+[m	[32mint fd;[m
[32m+[m	[32mssize_t nrd, nwr;[m
[32m+[m	[32mchar *buf;[m
[32m+[m
[32m+[m	[32mif (!filename)[m
[32m+[m		[32mreturn (0);[m
[32m+[m
[32m+[m	[32mfd = open(filename, O_RDONLY);[m
[32m+[m
[32m+[m	[32mif (fd == -1)[m
[32m+[m		[32mreturn (0);[m
[32m+[m
[32m+[m	[32mbuf = malloc(sizeof(char) * (letters));[m
[32m+[m	[32mif (!buf)[m
[32m+[m		[32mreturn (0);[m
[32m+[m
[32m+[m	[32mnrd = read(fd, buf, letters);[m
[32m+[m	[32mnwr = write(STDOUT_FILENO, buf, nrd);[m
[32m+[m
[32m+[m	[32mclose(fd);[m
[32m+[m
[32m+[m	[32mfree(buf);[m
[32m+[m
[32m+[m	[32mreturn (nwr);[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/0x15-file_io/1-create_file.c b/0x15-file_io/1-create_file.c[m
[1mnew file mode 100644[m
[1mindex 0000000..d7bc272[m
[1m--- /dev/null[m
[1m+++ b/0x15-file_io/1-create_file.c[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m#include "main.h"[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * create_file - creates a file[m
[32m+[m[32m * @filename: filename.[m
[32m+[m[32m * @text_content: content writed in the file.[m
[32m+[m[32m *[m
[32m+[m[32m * Return: 1 if it success. -1 if it fails.[m
[32m+[m[32m */[m
[32m+[m[32mint create_file(const char *filename, char *text_content)[m
[32m+[m[32m{[m
[32m+[m	[32mint fd;[m
[32m+[m	[32mint nletters;[m
[32m+[m	[32mint rwr;[m
[32m+[m
[32m+[m	[32mif (!filename)[m
[32m+[m		[32mreturn (-1);[m
[32m+[m
[32m+[m	[32mfd = open(filename, O_CREAT | O_WRONLY | O_TRUNC, 0600);[m
[32m+[m
[32m+[m	[32mif (fd == -1)[m
[32m+[m		[32mreturn (-1);[m
[32m+[m
[32m+[m	[32mif (!text_content)[m
[32m+[m		[32mtext_content = "";[m
[32m+[m
[32m+[m	[32mfor (nletters = 0; text_content[nletters]; nletters++)[m
[32m+[m		[32m;[m
[32m+[m
[32m+[m	[32mrwr = write(fd, text_content, nletters);[m
[32m+[m
[32m+[m	[32mif (rwr == -1)[m
[32m+[m		[32mreturn (-1);[m
[32m+[m
[32m+[m	[32mclose(fd);[m
[32m+[m
[32m+[m	[32mreturn (1);[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/0x15-file_io/100-elf_header.c b/0x15-file_io/100-elf_header.c[m
[1mnew file mode 100644[m
[1mindex 0000000..8d884fc[m
[1m--- /dev/null[m
[1m+++ b/0x15-file_io/100-elf_header.c[m
[36m@@ -0,0 +1,314 @@[m
[32m+[m[32m#include <elf.h>[m
[32m+[m[32m#include <sys/types.h>[m
[32m+[m[32m#include <sys/stat.h>[m
[32m+[m[32m#include <fcntl.h>[m
[32m+[m[32m#include <unistd.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m
[32m+[m[32mvoid check_elf(unsigned char *e_ident);[m
[32m+[m[32mvoid print_magic(unsigned char *e_ident);[m
[32m+[m[32mvoid print_class(unsigned char *e_ident);[m
[32m+[m[32mvoid print_data(unsigned char *e_ident);[m
[32m+[m[32mvoid print_version(unsigned char *e_ident);[m
[32m+[m[32mvoid print_abi(unsigned char *e_ident);[m
[32m+[m[32mvoid print_osabi(unsigned char *e_ident);[m
[32m+[m[32mvoid print_type(unsigned int e_type, unsigned char *e_ident);[m
[32m+[m[32mvoid print_entry(unsigned long int e_entry, unsigned char *e_ident);[m
[32m+[m[32mvoid close_elf(int elf);[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * check_elf - Checks if a file is an ELF file.[m
[32m+[m[32m * @e_ident: A pointer to an array containing the ELF magic numbers.[m
[32m+[m[32m *[m
[32m+[m[32m * Description: If the file is not an ELF file - exit code 98.[m
[32m+[m[32m */[m
[32m+[m[32mvoid check_elf(unsigned char *e_ident)[m
[32m+[m[32m{[m
[32m+[m	[32mint index;[m
[32m+[m
[32m+[m		[32mfor (index = 0; index < 4; index++)[m
[32m+[m	[32m{[m
[32m+[m		[32mif (e_ident[index] != 127 &&[m
[32m+[m		[32m    e_ident[index] != 'E' &&[m
[32m+[m		[32m    e_ident[index] != 'L' &&[m
[32m+[m		[32m    e_ident[index] != 'F')[m
[32m+[m		[32m{[m
[32m+[m			[32mdprintf(STDERR_FILENO, "Error: Not an ELF file\n");[m
[32m+[m			[32mexit(98);[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * print_magic - Prints the magic numbers of an ELF header.[m
[32m+[m[32m * @e_ident: A pointer to an array containing the ELF magic numbers.[m
[32m+[m[32m *[m
[32m+[m[32m * Description: Magic numbers are separated by spaces.[m
[32m+[m[32m */[m
[32m+[m[32mvoid print_magic(unsigned char *e_ident)[m
[32m+[m[32m{[m
[32m+[m	[32mint index;[m
[32m+[m
[32m+[m	[32mprintf("  Magic:   ");[m
[32m+[m
[32m+[m	[32mfor (index = 0; index < EI_NIDENT; index++)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("%02x", e_ident[index]);[m
[32m+[m
[32m+[m		[32mif (index == EI_NIDENT - 1)[m
[32m+[m			[32mprintf("\n");[m
[32m+[m		[32melse[m
[32m+[m			[32mprintf(" ");[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * print_class - Prints the class of an ELF header.[m
[32m+[m[32m * @e_ident: A pointer to an array containing the ELF class.[m
[32m+[m[32m */[m
[32m+[m[32mvoid print_class(unsigned char *e_ident)[m
[32m+[m[32m{[m
[32m+[m	[32mprintf("  Class:                             ");[m
[32m+[m
[32m+[m	[32mswitch (e_ident[EI_CLASS])[m
[32m+[m	[32m{[m
[32m+[m	[32mcase ELFCLASSNONE:[m
[32m+[m		[32mprintf("none\n");[m
[32m+[m		[32mbreak;[m
[32m+[m	[32mcase ELFCLASS32:[m
[32m+[m		[32mprintf("ELF32\n");[m
[32m+[m		[32mbreak;[m
[32m+[m	[32mcase ELFCLASS64:[m
[32m+[m		[32mprintf("ELF64\n");[m
[32m+[m		[32mbreak;[m
[32m+[m	[32mdefault:[m
[32m+[m		[32mprintf("<unknown: %x>\n", e_ident[EI_CLASS]);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * print_data - Prints the data of an ELF header.[m
[32m+[m[32m * @e_ident: A pointer to an array containing the ELF class.[m
[32m+[m[32m */[m
[32m+[m[32mvoid print_data(unsigned char *e_ident)[m
[32m+[m[32m{[m
[32m+[m	[32mprintf("  Data:                              ");[m
[32m+[m
[32m+[m	[32mswitch (e_ident[EI_DATA])[m
[32m+[m	[32m{[m
[32m+[m	[32mcase ELFDATANONE:[m
[32m+[m		[32mprintf("none\n");[m
[32m+[m		[32mbreak;[m
[32m+[m	[32mcase ELFDATA2LSB:[m
[32m+[m		[32mprintf("2's complement, little endian\n");[m
[32m+[m		[32mbreak;[m
[32m+[m	[32mcase ELFDATA2MSB:[m
[32m+[m		[32mprintf("2's complement, big endian\n");[m
[32m+[m		[32mbreak;[m
[32m+[m	[32mdefault:[m
[32m+[m		[32mprintf("<unknown: %x>\n", e_ident[EI_CLASS]);[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * print_version - Prints the version of an ELF header.[m
[32m+[m[32m * @e_ident: A pointer to an array containing the ELF version.[m
[32m+[m[32m */[m
[32m+[m[32mvoid print_version(unsigned char *e_ident)[m
[32m+[m[32m{[m
[32m+[m	[32mprintf("  Version:                           %d",[m
[32m+[m	[32m       e_ident[EI_VERSION]);[m
[32m+[m
[32m+[m	[32mswitch (e_ident[EI_VERSION])[m
[32m+[m	[32m{[m
[32m+[m	[32mcase EV_CURRENT:[m
[32m+[m		[32mprintf(" (current)\n");[m
[32m+[m		[32mbreak;